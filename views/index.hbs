<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
</head>
<body>
  <main>
    <h2>PassKey Test</h2>
    <form id="form" method="POST" action="/auth/username" class="center">
      <input id="csrf" type="hidden" name="_csrf" value={{csrfToken}}>
      <label class="mdc-floating-label" id="username-label">username</label>
      <input
        type="text"
        id="username"
        class="mdc-text-field__input"
        aria-labelledby="username-label"
        name="username"
        autocomplete="username webauthn"
        autofocus />
      <input id="passkey-signin" type="submit" class="mdc-button mdc-button--raised" value="Next" />
    </form>
  </main>
</body>
<script type="module">
  const csrf = document.getElementById('csrf').value

  function toBuffer(csrf) {
    const str = window.atob(csrf);
    const len = str.length;
    const bytes = new Uint16Array(len);
    for (let i = 0; i < len; i++) {
      bytes[i] = str.charCodeAt(i);
    }
    return bytes.buffer;
  }

  function toCSRF(ab) {
    const str = String.fromCharCode.apply(null, new Uint16Array(ab))
    return window.btoa(str);
  }

  const PublicKeyCredentialCreationOptions = {
    challenge: toBuffer(csrf), // ArrayBufferåž‹
    rpId: "localhost",
    userVerification: "required",
  }

  document.getElementById('passkey-signin').addEventListener('click', async s => {
    s.preventDefault()
    console.log(window.PublicKeyCredential)

    const cred = await navigator.credentials.get({
      publicKey: PublicKeyCredentialCreationOptions,
      mediation: 'conditional'
    })

    console.log(cred)

  })

</script>
</html>
